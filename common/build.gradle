repositories {}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation("net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}")

    // Fapi
    modApi("net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}+${rootProject.minecraft_version}")

    // Create
    modCompileOnly("com.simibubi.create:create-fabric-${rootProject.minecraft_version}:${rootProject.create_fabric_version}+mc${rootProject.minecraft_version}")

    // Trinkets
    modImplementation("earth.terrarium.baubly:baubly-common-${rootProject.minecraft_version}:${rootProject.baubly_version}") transitive false

    // Ears
    implementation("com.unascribed:ears-api:${rootProject.ears_version}")

    // Figura
    modCompileOnly("org.figuramc:figura-common-mojmap:${rootProject.figura_version}+${rootProject.minecraft_version}")

    // Create New Age
    modCompileOnly("maven.modrinth:create-new-age:${rootProject.new_age_version}")

    // Mixin Extras
    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:${rootProject.mixin_extras_version}"))

    // JEI
    modCompileOnly("mezz.jei:jei-${rootProject.minecraft_version}-common-api:${rootProject.jei_version}")

    // 3D skin layer
    modCompileOnly("maven.modrinth:3dskinlayers:${rootProject.skinlayers_version}")

    // Iris Shaders (needed for check)
    modCompileOnly("maven.modrinth:iris:1.7.2+1.20.1")

    // Cobblemon
    modCompileOnly("com.cobblemon:mod:${rootProject.cobblemon_version}+${rootProject.minecraft_version}")
}

architectury {
    common("fabric", "forge")
}

processResources.duplicatesStrategy = DuplicatesStrategy.INCLUDE

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    repositories {}
}

sourceSets {
    main {
        // Platform specific generated files
        resources {
            srcDirs += [
                    'src/main/generated'
            ]
            exclude ".cache/**"
            exclude "**/.fabric"
            exclude "**/.forge"

        }
    }
}

loom {
    Project common = project(":common")
    accessWidenerPath = common.file("src/main/resources/estrogen.accesswidener")
}